
Pong.0_Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  00000e30  00000ec4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e30  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000054  0080011e  0080011e  00000ee2  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  00000ee4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000085  00000000  00000000  000015b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000120  00000000  00000000  00001638  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000be3  00000000  00000000  00001758  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000002e0  00000000  00000000  0000233b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000680  00000000  00000000  0000261b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000cc  00000000  00000000  00002c9c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000051a  00000000  00000000  00002d68  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000007b  00000000  00000000  00003282  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000010  00000000  00000000  000032fd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__vector_16>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  70:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	e0 e3       	ldi	r30, 0x30	; 48
  90:	fe e0       	ldi	r31, 0x0E	; 14
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	ae 31       	cpi	r26, 0x1E	; 30
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	11 e0       	ldi	r17, 0x01	; 1
  a0:	ae e1       	ldi	r26, 0x1E	; 30
  a2:	b1 e0       	ldi	r27, 0x01	; 1
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	a2 37       	cpi	r26, 0x72	; 114
  aa:	b1 07       	cpc	r27, r17
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 d6 06 	call	0xdac	; 0xdac <main>
  b2:	0c 94 16 07 	jmp	0xe2c	; 0xe2c <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <init_timer_isr>:
============================================================================*/
void init_timer_isr( void )
{
   /*  set timer compare value (how often timer ISR will fire set to 1 ms timer interrupt) */

   OCR0A = ( TICKS_PER_MS * 1);
  ba:	88 e0       	ldi	r24, 0x08	; 8
  bc:	87 bd       	out	0x27, r24	; 39

  /*  enable timer ISR on compare A */
   TIMSK0 |= (1 << OCIE0A);
  be:	ee e6       	ldi	r30, 0x6E	; 110
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	80 81       	ld	r24, Z
  c4:	82 60       	ori	r24, 0x02	; 2
  c6:	80 83       	st	Z, r24

   /*  timer prescaler = system clock / 1024  */
   TCCR0B |= (1 << CS02) | (1 << CS00);
  c8:	85 b5       	in	r24, 0x25	; 37
  ca:	85 60       	ori	r24, 0x05	; 5
  cc:	85 bd       	out	0x25, r24	; 37
   /*  timer mode = CTC (count up to compare value, then reset)    */
   TCCR0A |= ( 1 << WGM01 );
  ce:	84 b5       	in	r24, 0x24	; 36
  d0:	82 60       	ori	r24, 0x02	; 2
  d2:	84 bd       	out	0x24, r24	; 36
}
  d4:	08 95       	ret

000000d6 <__vector_16>:

ISR(TIMER0_COMPA_vect)
{
  d6:	1f 92       	push	r1
  d8:	0f 92       	push	r0
  da:	0f b6       	in	r0, 0x3f	; 63
  dc:	0f 92       	push	r0
  de:	11 24       	eor	r1, r1
  e0:	2f 93       	push	r18
  e2:	3f 93       	push	r19
  e4:	8f 93       	push	r24
  e6:	9f 93       	push	r25
  time_ms_inc++;
  e8:	80 91 21 01 	lds	r24, 0x0121
  ec:	90 91 22 01 	lds	r25, 0x0122
  f0:	01 96       	adiw	r24, 0x01	; 1
  f2:	90 93 22 01 	sts	0x0122, r25
  f6:	80 93 21 01 	sts	0x0121, r24

  if(time_ms_inc >= qt_measurement_period_msec)
  fa:	20 91 00 01 	lds	r18, 0x0100
  fe:	30 91 01 01 	lds	r19, 0x0101
 102:	82 17       	cp	r24, r18
 104:	93 07       	cpc	r25, r19
 106:	38 f0       	brcs	.+14     	; 0x116 <__vector_16+0x40>
  {
    time_ms_inc =0;
 108:	10 92 22 01 	sts	0x0122, r1
 10c:	10 92 21 01 	sts	0x0121, r1
   /*  set flag: it's time to measure touch    */
   time_to_measure_touch = 1u;
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	80 93 20 01 	sts	0x0120, r24
  else
  {

  }
  /*  update the current time */
   current_time_ms_touch++;;
 116:	80 91 1e 01 	lds	r24, 0x011E
 11a:	90 91 1f 01 	lds	r25, 0x011F
 11e:	01 96       	adiw	r24, 0x01	; 1
 120:	90 93 1f 01 	sts	0x011F, r25
 124:	80 93 1e 01 	sts	0x011E, r24
}
 128:	9f 91       	pop	r25
 12a:	8f 91       	pop	r24
 12c:	3f 91       	pop	r19
 12e:	2f 91       	pop	r18
 130:	0f 90       	pop	r0
 132:	0f be       	out	0x3f, r0	; 63
 134:	0f 90       	pop	r0
 136:	1f 90       	pop	r1
 138:	18 95       	reti

0000013a <set_timer_period>:
------------------------------------------------------------------------------
Purpose :   set the timer period
============================================================================*/
void set_timer_period(uint16_t qt_measurement_period_msec)
{
	OCR0A = ( TICKS_PER_MS * 1);
 13a:	88 e0       	ldi	r24, 0x08	; 8
 13c:	87 bd       	out	0x27, r24	; 39
}
 13e:	08 95       	ret

00000140 <init_system>:
============================================================================*/
void init_system( void )
{
   /* run at 8MHz */

   asm("ldi r16,0x80");
 140:	00 e8       	ldi	r16, 0x80	; 128
   asm("sts 0x61,r16");
 142:	00 93 61 00 	sts	0x0061, r16
   asm("ldi r16,0x00");
 146:	00 e0       	ldi	r16, 0x00	; 0
   asm("sts 0x61,r16");
 148:	00 93 61 00 	sts	0x0061, r16

   /* Disable the JTAG Pins */
   asm("ldi r16,0x80");
 14c:	00 e8       	ldi	r16, 0x80	; 128
   asm("sts 0x55,r16");
 14e:	00 93 55 00 	sts	0x0055, r16
   asm("ldi r16,0x80");
 152:	00 e8       	ldi	r16, 0x80	; 128
   asm("sts 0x55,r16");
 154:	00 93 55 00 	sts	0x0055, r16

   asm("nop");
 158:	00 00       	nop
   asm("nop");
 15a:	00 00       	nop

   /* disable pull-ups */
   MCUCR |= (1u << PUD);
 15c:	85 b7       	in	r24, 0x35	; 53
 15e:	80 61       	ori	r24, 0x10	; 16
 160:	85 bf       	out	0x35, r24	; 53
}
 162:	08 95       	ret

00000164 <_00110000001_>:
 164:	7f 93       	push	r23
 166:	9f 93       	push	r25
 168:	72 b1       	in	r23, 0x02	; 2
 16a:	98 2f       	mov	r25, r24
 16c:	90 95       	com	r25
 16e:	79 23       	and	r23, r25
 170:	72 b9       	out	0x02, r23	; 2
 172:	75 b1       	in	r23, 0x05	; 5
 174:	96 2f       	mov	r25, r22
 176:	90 95       	com	r25
 178:	79 23       	and	r23, r25
 17a:	75 b9       	out	0x05, r23	; 5
 17c:	98 2f       	mov	r25, r24
 17e:	71 b1       	in	r23, 0x01	; 1
 180:	79 2b       	or	r23, r25
 182:	71 b9       	out	0x01, r23	; 1
 184:	74 b1       	in	r23, 0x04	; 4
 186:	96 2f       	mov	r25, r22
 188:	79 2b       	or	r23, r25
 18a:	74 b9       	out	0x04, r23	; 4
 18c:	94 2f       	mov	r25, r20
 18e:	90 95       	com	r25
 190:	78 b1       	in	r23, 0x08	; 8
 192:	79 23       	and	r23, r25
 194:	78 b9       	out	0x08, r23	; 8
 196:	77 b1       	in	r23, 0x07	; 7
 198:	94 2f       	mov	r25, r20
 19a:	79 2b       	or	r23, r25
 19c:	77 b9       	out	0x07, r23	; 7
 19e:	29 98       	cbi	0x05, 1	; 5
 1a0:	21 9a       	sbi	0x04, 1	; 4
 1a2:	9f 91       	pop	r25
 1a4:	7f 91       	pop	r23
 1a6:	08 95       	ret

000001a8 <_00110000100_>:
 1a8:	7f 93       	push	r23
 1aa:	9f 93       	push	r25
 1ac:	74 b1       	in	r23, 0x04	; 4
 1ae:	70 93 67 01 	sts	0x0167, r23
 1b2:	70 93 71 01 	sts	0x0171, r23
 1b6:	71 b1       	in	r23, 0x01	; 1
 1b8:	70 93 6a 01 	sts	0x016A, r23
 1bc:	70 93 6b 01 	sts	0x016B, r23
 1c0:	78 2f       	mov	r23, r24
 1c2:	70 95       	com	r23
 1c4:	90 91 71 01 	lds	r25, 0x0171
 1c8:	97 23       	and	r25, r23
 1ca:	90 93 71 01 	sts	0x0171, r25
 1ce:	76 2f       	mov	r23, r22
 1d0:	70 95       	com	r23
 1d2:	90 91 6b 01 	lds	r25, 0x016B
 1d6:	97 23       	and	r25, r23
 1d8:	90 93 6b 01 	sts	0x016B, r25
 1dc:	88 27       	eor	r24, r24
 1de:	70 91 6b 01 	lds	r23, 0x016B
 1e2:	71 b9       	out	0x01, r23	; 1
 1e4:	9f 91       	pop	r25
 1e6:	7f 91       	pop	r23
 1e8:	08 95       	ret

000001ea <_00110000010_>:
 1ea:	44 b9       	out	0x04, r20	; 4
 1ec:	86 b9       	out	0x06, r24	; 6
 1ee:	e1 b8       	out	0x01, r14	; 1
 1f0:	21 b9       	out	0x01, r18	; 1
 1f2:	04 b9       	out	0x04, r16	; 4
 1f4:	86 b9       	out	0x06, r24	; 6
 1f6:	08 95       	ret

000001f8 <_00110000011_>:
 1f8:	29 9a       	sbi	0x05, 1	; 5
 1fa:	08 95       	ret

000001fc <_00110000110_>:
 1fc:	29 98       	cbi	0x05, 1	; 5
 1fe:	70 91 6a 01 	lds	r23, 0x016A
 202:	71 b9       	out	0x01, r23	; 1
 204:	08 95       	ret

00000206 <touch_init>:
Output  :   n/a
Notes   :   Generated code from QTouch Studio. Do not change
============================================================================*/
static void config_sensors(void)
{
	qt_enable_key( CHANNEL_0, NO_AKS_GROUP, 10u, HYST_6_25 );
 206:	80 e0       	ldi	r24, 0x00	; 0
 208:	60 e0       	ldi	r22, 0x00	; 0
 20a:	4a e0       	ldi	r20, 0x0A	; 10
 20c:	23 e0       	ldi	r18, 0x03	; 3
 20e:	0e 94 a4 02 	call	0x548	; 0x548 <qt_enable_key>
	qt_enable_key( CHANNEL_1, NO_AKS_GROUP, 10u, HYST_6_25 );
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	60 e0       	ldi	r22, 0x00	; 0
 216:	4a e0       	ldi	r20, 0x0A	; 10
 218:	23 e0       	ldi	r18, 0x03	; 3
 21a:	0e 94 a4 02 	call	0x548	; 0x548 <qt_enable_key>
	qt_enable_key( CHANNEL_2, NO_AKS_GROUP, 10u, HYST_6_25 );
 21e:	82 e0       	ldi	r24, 0x02	; 2
 220:	60 e0       	ldi	r22, 0x00	; 0
 222:	4a e0       	ldi	r20, 0x0A	; 10
 224:	23 e0       	ldi	r18, 0x03	; 3
 226:	0e 94 a4 02 	call	0x548	; 0x548 <qt_enable_key>
	qt_enable_key( CHANNEL_3, NO_AKS_GROUP, 10u, HYST_6_25 );
 22a:	83 e0       	ldi	r24, 0x03	; 3
 22c:	60 e0       	ldi	r22, 0x00	; 0
 22e:	4a e0       	ldi	r20, 0x0A	; 10
 230:	23 e0       	ldi	r18, 0x03	; 3
 232:	0e 94 a4 02 	call	0x548	; 0x548 <qt_enable_key>

    /* Configure the Sensors as keys or Keys With Rotor/Sliders in this function */
    config_sensors();

    /* initialise touch sensing */
    qt_init_sensing();
 236:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <qt_init_sensing_with_burst>

static void qt_set_parameters( void )
{

/*  This will be modified by the user to different values   */
qt_config_data.qt_di              = 2;
 23a:	82 e0       	ldi	r24, 0x02	; 2
 23c:	80 93 32 01 	sts	0x0132, r24
qt_config_data.qt_neg_drift_rate  = 20;
 240:	84 e1       	ldi	r24, 0x14	; 20
 242:	80 93 35 01 	sts	0x0135, r24
qt_config_data.qt_pos_drift_rate  = 5;
 246:	95 e0       	ldi	r25, 0x05	; 5
 248:	90 93 36 01 	sts	0x0136, r25
qt_config_data.qt_max_on_duration = 0;
 24c:	10 92 34 01 	sts	0x0134, r1
qt_config_data.qt_drift_hold_time = 20;
 250:	80 93 33 01 	sts	0x0133, r24
qt_config_data.qt_recal_threshold = 1;
 254:	e2 e3       	ldi	r30, 0x32	; 50
 256:	f1 e0       	ldi	r31, 0x01	; 1
 258:	81 e0       	ldi	r24, 0x01	; 1
 25a:	82 93       	st	-Z, r24
qt_config_data.qt_pos_recal_delay = 0;
 25c:	16 82       	std	Z+6, r1	; 0x06
              qt_filter_callback = &set_timestamp1;
       #else
              qt_filter_callback = 0;
       #endif
       #else
              qt_filter_callback = 0;
 25e:	10 92 39 01 	sts	0x0139, r1
 262:	10 92 38 01 	sts	0x0138, r1
    /* Initialize debug protocol */
    QDebug_Init();
#endif

    /* enable interrupts */
    __enable_interrupt();
 266:	78 94       	sei
#ifdef _DEBUG_INTERFACE_
    /* Process commands from PC */
    QDebug_ProcessCommands();
#endif

}
 268:	08 95       	ret

0000026a <touch_measure>:
{
   /*status flags to indicate the re-burst for library*/
   static uint16_t status_flag = 0u;
   static uint16_t burst_flag = 0u;

	  if( time_to_measure_touch )
 26a:	80 91 20 01 	lds	r24, 0x0120
 26e:	88 23       	and	r24, r24
 270:	a1 f0       	breq	.+40     	; 0x29a <touch_measure+0x30>
        {

            /*  clear flag: it's time to measure touch  */
            time_to_measure_touch = 0u;
 272:	10 92 20 01 	sts	0x0120, r1
				#ifdef _QDEBUG_TIME_STAMPS_
						TIMESTAMP0;
				#endif
				#endif
                /*  one time measure touch sensors    */
                status_flag = qt_measure_sensors( current_time_ms_touch );
 276:	80 91 1e 01 	lds	r24, 0x011E
 27a:	90 91 1f 01 	lds	r25, 0x011F
 27e:	0e 94 2a 02 	call	0x454	; 0x454 <qt_measure_sensors>
 282:	90 93 24 01 	sts	0x0124, r25
 286:	80 93 23 01 	sts	0x0123, r24
				#ifdef _DEBUG_INTERFACE_
				#ifdef _QDEBUG_TIME_STAMPS_
					  TIMESTAMP2;
				#endif
				#endif
                burst_flag = status_flag & QTLIB_BURST_AGAIN;
 28a:	80 70       	andi	r24, 0x00	; 0
 28c:	91 70       	andi	r25, 0x01	; 1
 28e:	90 93 26 01 	sts	0x0126, r25
 292:	80 93 25 01 	sts	0x0125, r24
				#endif
				#endif

                /* Time-critical host application code goes here */

            }while (burst_flag) ;
 296:	00 97       	sbiw	r24, 0x00	; 0
 298:	71 f7       	brne	.-36     	; 0x276 <touch_measure+0xc>
 29a:	08 95       	ret

0000029c <burst_qm_1>:
 29c:	a0 e0       	ldi	r26, 0x00	; 0
 29e:	b0 e0       	ldi	r27, 0x00	; 0
 2a0:	e4 e5       	ldi	r30, 0x54	; 84
 2a2:	f1 e0       	ldi	r31, 0x01	; 1
 2a4:	0c 94 e8 06 	jmp	0xdd0	; 0xdd0 <__prologue_saves__+0x12>
 2a8:	c8 2f       	mov	r28, r24
 2aa:	16 2f       	mov	r17, r22
 2ac:	f8 94       	cli
 2ae:	80 91 64 00 	lds	r24, 0x0064
 2b2:	8e 7f       	andi	r24, 0xFE	; 254
 2b4:	80 93 64 00 	sts	0x0064, r24
 2b8:	ec 2f       	mov	r30, r28
 2ba:	e6 95       	lsr	r30
 2bc:	e6 95       	lsr	r30
 2be:	f0 e0       	ldi	r31, 0x00	; 0
 2c0:	ee 0f       	add	r30, r30
 2c2:	ff 1f       	adc	r31, r31
 2c4:	df 01       	movw	r26, r30
 2c6:	ae 5f       	subi	r26, 0xFE	; 254
 2c8:	be 4f       	sbci	r27, 0xFE	; 254
 2ca:	8c 91       	ld	r24, X
 2cc:	80 93 7c 00 	sts	0x007C, r24
 2d0:	80 91 64 00 	lds	r24, 0x0064
 2d4:	81 60       	ori	r24, 0x01	; 1
 2d6:	80 93 64 00 	sts	0x0064, r24
 2da:	df 01       	movw	r26, r30
 2dc:	ab 5f       	subi	r26, 0xFB	; 251
 2de:	be 4f       	sbci	r27, 0xFE	; 254
 2e0:	ed 5f       	subi	r30, 0xFD	; 253
 2e2:	fe 4f       	sbci	r31, 0xFE	; 254
 2e4:	8c 91       	ld	r24, X
 2e6:	60 81       	ld	r22, Z
 2e8:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <_00110000100_>
 2ec:	f8 2e       	mov	r15, r24
 2ee:	d0 e0       	ldi	r29, 0x00	; 0
 2f0:	fe 01       	movw	r30, r28
 2f2:	e7 5e       	subi	r30, 0xE7	; 231
 2f4:	fe 4f       	sbci	r31, 0xFE	; 254
 2f6:	b0 80       	ld	r11, Z
 2f8:	dd 24       	eor	r13, r13
 2fa:	cc 24       	eor	r12, r12
 2fc:	c3 94       	inc	r12
 2fe:	1f c0       	rjmp	.+62     	; 0x33e <burst_qm_1+0xa2>
 300:	81 2f       	mov	r24, r17
 302:	6f 2d       	mov	r22, r15
 304:	40 91 71 01 	lds	r20, 0x0171
 308:	20 91 6b 01 	lds	r18, 0x016B
 30c:	00 91 67 01 	lds	r16, 0x0167
 310:	e0 90 6a 01 	lds	r14, 0x016A
 314:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_00110000010_>
 318:	8f b7       	in	r24, 0x3f	; 63
 31a:	90 91 68 01 	lds	r25, 0x0168
 31e:	89 2b       	or	r24, r25
 320:	8f bf       	out	0x3f, r24	; 63
 322:	80 91 18 01 	lds	r24, 0x0118
 326:	8f 5f       	subi	r24, 0xFF	; 255
 328:	80 93 18 01 	sts	0x0118, r24
 32c:	82 30       	cpi	r24, 0x02	; 2
 32e:	30 f0       	brcs	.+12     	; 0x33c <burst_qm_1+0xa0>
 330:	82 30       	cpi	r24, 0x02	; 2
 332:	21 f0       	breq	.+8      	; 0x33c <burst_qm_1+0xa0>
 334:	83 30       	cpi	r24, 0x03	; 3
 336:	11 f0       	breq	.+4      	; 0x33c <burst_qm_1+0xa0>
 338:	c0 92 18 01 	sts	0x0118, r12
 33c:	d3 94       	inc	r13
 33e:	f8 94       	cli
 340:	db 14       	cp	r13, r11
 342:	f1 f6       	brne	.-68     	; 0x300 <burst_qm_1+0x64>
 344:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <_00110000011_>
 348:	10 92 85 00 	sts	0x0085, r1
 34c:	10 92 84 00 	sts	0x0084, r1
 350:	b5 9a       	sbi	0x16, 5	; 22
 352:	00 b6       	in	r0, 0x30	; 48
 354:	05 fe       	sbrs	r0, 5
 356:	19 c0       	rjmp	.+50     	; 0x38a <burst_qm_1+0xee>
 358:	8f b7       	in	r24, 0x3f	; 63
 35a:	90 91 68 01 	lds	r25, 0x0168
 35e:	89 2b       	or	r24, r25
 360:	8f bf       	out	0x3f, r24	; 63
 362:	08 c0       	rjmp	.+16     	; 0x374 <burst_qm_1+0xd8>
 364:	80 91 84 00 	lds	r24, 0x0084
 368:	90 91 85 00 	lds	r25, 0x0085
 36c:	20 e2       	ldi	r18, 0x20	; 32
 36e:	80 30       	cpi	r24, 0x00	; 0
 370:	92 07       	cpc	r25, r18
 372:	90 f4       	brcc	.+36     	; 0x398 <burst_qm_1+0xfc>
 374:	b5 9b       	sbis	0x16, 5	; 22
 376:	f6 cf       	rjmp	.-20     	; 0x364 <burst_qm_1+0xc8>
 378:	80 91 86 00 	lds	r24, 0x0086
 37c:	90 91 87 00 	lds	r25, 0x0087
 380:	cc 0f       	add	r28, r28
 382:	dd 1f       	adc	r29, r29
 384:	c6 5c       	subi	r28, 0xC6	; 198
 386:	de 4f       	sbci	r29, 0xFE	; 254
 388:	0d c0       	rjmp	.+26     	; 0x3a4 <burst_qm_1+0x108>
 38a:	cc 0f       	add	r28, r28
 38c:	dd 1f       	adc	r29, r29
 38e:	c6 5c       	subi	r28, 0xC6	; 198
 390:	de 4f       	sbci	r29, 0xFE	; 254
 392:	81 e0       	ldi	r24, 0x01	; 1
 394:	90 e0       	ldi	r25, 0x00	; 0
 396:	06 c0       	rjmp	.+12     	; 0x3a4 <burst_qm_1+0x108>
 398:	cc 0f       	add	r28, r28
 39a:	dd 1f       	adc	r29, r29
 39c:	c6 5c       	subi	r28, 0xC6	; 198
 39e:	de 4f       	sbci	r29, 0xFE	; 254
 3a0:	80 e0       	ldi	r24, 0x00	; 0
 3a2:	90 e2       	ldi	r25, 0x20	; 32
 3a4:	99 83       	std	Y+1, r25	; 0x01
 3a6:	88 83       	st	Y, r24
 3a8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_00110000110_>
 3ac:	8f b7       	in	r24, 0x3f	; 63
 3ae:	90 91 68 01 	lds	r25, 0x0168
 3b2:	89 2b       	or	r24, r25
 3b4:	8f bf       	out	0x3f, r24	; 63
 3b6:	cd b7       	in	r28, 0x3d	; 61
 3b8:	de b7       	in	r29, 0x3e	; 62
 3ba:	e9 e0       	ldi	r30, 0x09	; 9
 3bc:	0c 94 04 07 	jmp	0xe08	; 0xe08 <__epilogue_restores__+0x12>

000003c0 <qt_init_sensing_with_burst>:
 3c0:	cf 93       	push	r28
 3c2:	c0 e0       	ldi	r28, 0x00	; 0
 3c4:	04 c0       	rjmp	.+8      	; 0x3ce <qt_init_sensing_with_burst+0xe>
 3c6:	8c 2f       	mov	r24, r28
 3c8:	0e 94 2f 03 	call	0x65e	; 0x65e <start_cal_sensor>
 3cc:	cf 5f       	subi	r28, 0xFF	; 255
 3ce:	80 91 4e 01 	lds	r24, 0x014E
 3d2:	c8 17       	cp	r28, r24
 3d4:	c0 f3       	brcs	.-16     	; 0x3c6 <qt_init_sensing_with_burst+0x6>
 3d6:	10 92 2a 01 	sts	0x012A, r1
 3da:	10 92 29 01 	sts	0x0129, r1
 3de:	0e 94 02 06 	call	0xc04	; 0xc04 <burst_init>
 3e2:	cf 91       	pop	r28
 3e4:	08 95       	ret

000003e6 <qt_get_library_sig>:
 3e6:	fc 01       	movw	r30, r24
 3e8:	81 e2       	ldi	r24, 0x21	; 33
 3ea:	90 e0       	ldi	r25, 0x00	; 0
 3ec:	91 83       	std	Z+1, r25	; 0x01
 3ee:	80 83       	st	Z, r24
 3f0:	84 e2       	ldi	r24, 0x24	; 36
 3f2:	90 e0       	ldi	r25, 0x00	; 0
 3f4:	93 83       	std	Z+3, r25	; 0x03
 3f6:	82 83       	std	Z+2, r24	; 0x02
 3f8:	80 e0       	ldi	r24, 0x00	; 0
 3fa:	95 e0       	ldi	r25, 0x05	; 5
 3fc:	95 83       	std	Z+5, r25	; 0x05
 3fe:	84 83       	std	Z+4, r24	; 0x04
 400:	08 95       	ret

00000402 <qt_calibrate_sensing>:
 402:	cf 93       	push	r28
 404:	c0 e0       	ldi	r28, 0x00	; 0
 406:	04 c0       	rjmp	.+8      	; 0x410 <qt_calibrate_sensing+0xe>
 408:	8c 2f       	mov	r24, r28
 40a:	0e 94 2f 03 	call	0x65e	; 0x65e <start_cal_sensor>
 40e:	cf 5f       	subi	r28, 0xFF	; 255
 410:	80 91 4e 01 	lds	r24, 0x014E
 414:	c8 17       	cp	r28, r24
 416:	c0 f3       	brcs	.-16     	; 0x408 <qt_calibrate_sensing+0x6>
 418:	cf 91       	pop	r28
 41a:	08 95       	ret

0000041c <qt_reset_sensing>:
 41c:	10 92 4e 01 	sts	0x014E, r1
 420:	84 e0       	ldi	r24, 0x04	; 4
 422:	80 93 32 01 	sts	0x0132, r24
 426:	84 e1       	ldi	r24, 0x14	; 20
 428:	80 93 35 01 	sts	0x0135, r24
 42c:	95 e0       	ldi	r25, 0x05	; 5
 42e:	90 93 36 01 	sts	0x0136, r25
 432:	10 92 34 01 	sts	0x0134, r1
 436:	80 93 33 01 	sts	0x0133, r24
 43a:	e2 e3       	ldi	r30, 0x32	; 50
 43c:	f1 e0       	ldi	r31, 0x01	; 1
 43e:	81 e0       	ldi	r24, 0x01	; 1
 440:	82 93       	st	-Z, r24
 442:	83 e0       	ldi	r24, 0x03	; 3
 444:	86 83       	std	Z+6, r24	; 0x06
 446:	0e 94 64 06 	call	0xcc8	; 0xcc8 <burst_reset>
 44a:	10 92 39 01 	sts	0x0139, r1
 44e:	10 92 38 01 	sts	0x0138, r1
 452:	08 95       	ret

00000454 <qt_measure_sensors>:
 454:	1f 93       	push	r17
 456:	cf 93       	push	r28
 458:	df 93       	push	r29
 45a:	10 92 4c 01 	sts	0x014C, r1
 45e:	10 92 4b 01 	sts	0x014B, r1
 462:	40 91 29 01 	lds	r20, 0x0129
 466:	50 91 2a 01 	lds	r21, 0x012A
 46a:	90 93 2a 01 	sts	0x012A, r25
 46e:	80 93 29 01 	sts	0x0129, r24
 472:	20 91 2b 01 	lds	r18, 0x012B
 476:	30 91 2c 01 	lds	r19, 0x012C
 47a:	24 1b       	sub	r18, r20
 47c:	35 0b       	sbc	r19, r21
 47e:	28 0f       	add	r18, r24
 480:	39 1f       	adc	r19, r25
 482:	c0 e0       	ldi	r28, 0x00	; 0
 484:	03 c0       	rjmp	.+6      	; 0x48c <qt_measure_sensors+0x38>
 486:	28 5c       	subi	r18, 0xC8	; 200
 488:	30 40       	sbci	r19, 0x00	; 0
 48a:	cf 5f       	subi	r28, 0xFF	; 255
 48c:	28 3c       	cpi	r18, 0xC8	; 200
 48e:	31 05       	cpc	r19, r1
 490:	d0 f7       	brcc	.-12     	; 0x486 <qt_measure_sensors+0x32>
 492:	30 93 2c 01 	sts	0x012C, r19
 496:	20 93 2b 01 	sts	0x012B, r18
 49a:	80 91 4d 01 	lds	r24, 0x014D
 49e:	88 23       	and	r24, r24
 4a0:	41 f0       	breq	.+16     	; 0x4b2 <qt_measure_sensors+0x5e>
 4a2:	8c 17       	cp	r24, r28
 4a4:	18 f4       	brcc	.+6      	; 0x4ac <qt_measure_sensors+0x58>
 4a6:	10 92 4d 01 	sts	0x014D, r1
 4aa:	03 c0       	rjmp	.+6      	; 0x4b2 <qt_measure_sensors+0x5e>
 4ac:	8c 1b       	sub	r24, r28
 4ae:	80 93 4d 01 	sts	0x014D, r24
 4b2:	0e 94 6e 06 	call	0xcdc	; 0xcdc <burst>
 4b6:	e0 91 38 01 	lds	r30, 0x0138
 4ba:	f0 91 39 01 	lds	r31, 0x0139
 4be:	30 97       	sbiw	r30, 0x00	; 0
 4c0:	09 f0       	breq	.+2      	; 0x4c4 <qt_measure_sensors+0x70>
 4c2:	09 95       	icall
 4c4:	10 e0       	ldi	r17, 0x00	; 0
 4c6:	d0 e0       	ldi	r29, 0x00	; 0
 4c8:	06 c0       	rjmp	.+12     	; 0x4d6 <qt_measure_sensors+0x82>
 4ca:	8d 2f       	mov	r24, r29
 4cc:	6c 2f       	mov	r22, r28
 4ce:	0e 94 44 03 	call	0x688	; 0x688 <process_sensor>
 4d2:	18 2b       	or	r17, r24
 4d4:	df 5f       	subi	r29, 0xFF	; 255
 4d6:	50 91 4e 01 	lds	r21, 0x014E
 4da:	d5 17       	cp	r29, r21
 4dc:	b0 f3       	brcs	.-20     	; 0x4ca <qt_measure_sensors+0x76>
 4de:	11 23       	and	r17, r17
 4e0:	49 f0       	breq	.+18     	; 0x4f4 <qt_measure_sensors+0xa0>
 4e2:	80 91 4b 01 	lds	r24, 0x014B
 4e6:	90 91 4c 01 	lds	r25, 0x014C
 4ea:	91 60       	ori	r25, 0x01	; 1
 4ec:	90 93 4c 01 	sts	0x014C, r25
 4f0:	80 93 4b 01 	sts	0x014B, r24
 4f4:	10 92 4a 01 	sts	0x014A, r1
 4f8:	af e4       	ldi	r26, 0x4F	; 79
 4fa:	b1 e0       	ldi	r27, 0x01	; 1
 4fc:	40 e0       	ldi	r20, 0x00	; 0
 4fe:	81 e0       	ldi	r24, 0x01	; 1
 500:	90 e0       	ldi	r25, 0x00	; 0
 502:	18 c0       	rjmp	.+48     	; 0x534 <qt_measure_sensors+0xe0>
 504:	2c 91       	ld	r18, X
 506:	28 71       	andi	r18, 0x18	; 24
 508:	99 f0       	breq	.+38     	; 0x530 <qt_measure_sensors+0xdc>
 50a:	e4 2f       	mov	r30, r20
 50c:	e6 95       	lsr	r30
 50e:	e6 95       	lsr	r30
 510:	e6 95       	lsr	r30
 512:	f0 e0       	ldi	r31, 0x00	; 0
 514:	e6 5c       	subi	r30, 0xC6	; 198
 516:	fe 4f       	sbci	r31, 0xFE	; 254
 518:	24 2f       	mov	r18, r20
 51a:	27 70       	andi	r18, 0x07	; 7
 51c:	bc 01       	movw	r22, r24
 51e:	02 c0       	rjmp	.+4      	; 0x524 <qt_measure_sensors+0xd0>
 520:	66 0f       	add	r22, r22
 522:	77 1f       	adc	r23, r23
 524:	2a 95       	dec	r18
 526:	e2 f7       	brpl	.-8      	; 0x520 <qt_measure_sensors+0xcc>
 528:	9b 01       	movw	r18, r22
 52a:	30 89       	ldd	r19, Z+16	; 0x10
 52c:	32 2b       	or	r19, r18
 52e:	30 8b       	std	Z+16, r19	; 0x10
 530:	4f 5f       	subi	r20, 0xFF	; 255
 532:	16 96       	adiw	r26, 0x06	; 6
 534:	45 17       	cp	r20, r21
 536:	31 f7       	brne	.-52     	; 0x504 <qt_measure_sensors+0xb0>
 538:	80 91 4b 01 	lds	r24, 0x014B
 53c:	90 91 4c 01 	lds	r25, 0x014C
 540:	df 91       	pop	r29
 542:	cf 91       	pop	r28
 544:	1f 91       	pop	r17
 546:	08 95       	ret

00000548 <qt_enable_key>:
 548:	90 91 4e 01 	lds	r25, 0x014E
 54c:	a9 2f       	mov	r26, r25
 54e:	b0 e0       	ldi	r27, 0x00	; 0
 550:	fd 01       	movw	r30, r26
 552:	ee 0f       	add	r30, r30
 554:	ff 1f       	adc	r31, r31
 556:	ea 0f       	add	r30, r26
 558:	fb 1f       	adc	r31, r27
 55a:	ee 0f       	add	r30, r30
 55c:	ff 1f       	adc	r31, r31
 55e:	e1 5b       	subi	r30, 0xB1	; 177
 560:	fe 4f       	sbci	r31, 0xFE	; 254
 562:	43 83       	std	Z+3, r20	; 0x03
 564:	67 70       	andi	r22, 0x07	; 7
 566:	85 83       	std	Z+5, r24	; 0x05
 568:	23 70       	andi	r18, 0x03	; 3
 56a:	66 0f       	add	r22, r22
 56c:	66 0f       	add	r22, r22
 56e:	66 0f       	add	r22, r22
 570:	26 2b       	or	r18, r22
 572:	24 83       	std	Z+4, r18	; 0x04
 574:	9f 5f       	subi	r25, 0xFF	; 255
 576:	90 93 4e 01 	sts	0x014E, r25
 57a:	08 95       	ret

0000057c <qt_get_sensor_delta>:
 57c:	1f 93       	push	r17
 57e:	cf 93       	push	r28
 580:	df 93       	push	r29
 582:	c8 2f       	mov	r28, r24
 584:	d0 e0       	ldi	r29, 0x00	; 0
 586:	fe 01       	movw	r30, r28
 588:	ee 0f       	add	r30, r30
 58a:	ff 1f       	adc	r31, r31
 58c:	ec 0f       	add	r30, r28
 58e:	fd 1f       	adc	r31, r29
 590:	ee 0f       	add	r30, r30
 592:	ff 1f       	adc	r31, r31
 594:	e1 5b       	subi	r30, 0xB1	; 177
 596:	fe 4f       	sbci	r31, 0xFE	; 254
 598:	95 81       	ldd	r25, Z+5	; 0x05
 59a:	23 81       	ldd	r18, Z+3	; 0x03
 59c:	30 e0       	ldi	r19, 0x00	; 0
 59e:	00 90 31 01 	lds	r0, 0x0131
 5a2:	02 c0       	rjmp	.+4      	; 0x5a8 <qt_get_sensor_delta+0x2c>
 5a4:	35 95       	asr	r19
 5a6:	27 95       	ror	r18
 5a8:	0a 94       	dec	r0
 5aa:	e2 f7       	brpl	.-8      	; 0x5a4 <qt_get_sensor_delta+0x28>
 5ac:	12 2f       	mov	r17, r18
 5ae:	24 30       	cpi	r18, 0x04	; 4
 5b0:	08 f4       	brcc	.+2      	; 0x5b4 <qt_get_sensor_delta+0x38>
 5b2:	14 e0       	ldi	r17, 0x04	; 4
 5b4:	20 91 4e 01 	lds	r18, 0x014E
 5b8:	82 17       	cp	r24, r18
 5ba:	68 f5       	brcc	.+90     	; 0x616 <qt_get_sensor_delta+0x9a>
 5bc:	89 2f       	mov	r24, r25
 5be:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <get_channel_delta>
 5c2:	41 2f       	mov	r20, r17
 5c4:	50 e0       	ldi	r21, 0x00	; 0
 5c6:	16 95       	lsr	r17
 5c8:	16 95       	lsr	r17
 5ca:	21 2f       	mov	r18, r17
 5cc:	30 e0       	ldi	r19, 0x00	; 0
 5ce:	24 1b       	sub	r18, r20
 5d0:	35 0b       	sbc	r19, r21
 5d2:	28 17       	cp	r18, r24
 5d4:	39 07       	cpc	r19, r25
 5d6:	64 f4       	brge	.+24     	; 0x5f0 <qt_get_sensor_delta+0x74>
 5d8:	fe 01       	movw	r30, r28
 5da:	ee 0f       	add	r30, r30
 5dc:	ff 1f       	adc	r31, r31
 5de:	ec 0f       	add	r30, r28
 5e0:	fd 1f       	adc	r31, r29
 5e2:	ee 0f       	add	r30, r30
 5e4:	ff 1f       	adc	r31, r31
 5e6:	e1 5b       	subi	r30, 0xB1	; 177
 5e8:	fe 4f       	sbci	r31, 0xFE	; 254
 5ea:	24 81       	ldd	r18, Z+4	; 0x04
 5ec:	2b 7f       	andi	r18, 0xFB	; 251
 5ee:	24 83       	std	Z+4, r18	; 0x04
 5f0:	50 95       	com	r21
 5f2:	41 95       	neg	r20
 5f4:	5f 4f       	sbci	r21, 0xFF	; 255
 5f6:	48 17       	cp	r20, r24
 5f8:	59 07       	cpc	r21, r25
 5fa:	7c f0       	brlt	.+30     	; 0x61a <qt_get_sensor_delta+0x9e>
 5fc:	fe 01       	movw	r30, r28
 5fe:	ee 0f       	add	r30, r30
 600:	ff 1f       	adc	r31, r31
 602:	ec 0f       	add	r30, r28
 604:	fd 1f       	adc	r31, r29
 606:	ee 0f       	add	r30, r30
 608:	ff 1f       	adc	r31, r31
 60a:	e1 5b       	subi	r30, 0xB1	; 177
 60c:	fe 4f       	sbci	r31, 0xFE	; 254
 60e:	24 81       	ldd	r18, Z+4	; 0x04
 610:	24 60       	ori	r18, 0x04	; 4
 612:	24 83       	std	Z+4, r18	; 0x04
 614:	02 c0       	rjmp	.+4      	; 0x61a <qt_get_sensor_delta+0x9e>
 616:	80 e0       	ldi	r24, 0x00	; 0
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	df 91       	pop	r29
 61c:	cf 91       	pop	r28
 61e:	1f 91       	pop	r17
 620:	08 95       	ret

00000622 <goto_no_detect>:
 622:	90 e0       	ldi	r25, 0x00	; 0
 624:	fc 01       	movw	r30, r24
 626:	ee 0f       	add	r30, r30
 628:	ff 1f       	adc	r31, r31
 62a:	e8 0f       	add	r30, r24
 62c:	f9 1f       	adc	r31, r25
 62e:	ee 0f       	add	r30, r30
 630:	ff 1f       	adc	r31, r31
 632:	e1 5b       	subi	r30, 0xB1	; 177
 634:	fe 4f       	sbci	r31, 0xFE	; 254
 636:	25 81       	ldd	r18, Z+5	; 0x05
 638:	82 e0       	ldi	r24, 0x02	; 2
 63a:	80 83       	st	Z, r24
 63c:	80 91 4b 01 	lds	r24, 0x014B
 640:	90 91 4c 01 	lds	r25, 0x014C
 644:	82 60       	ori	r24, 0x02	; 2
 646:	90 93 4c 01 	sts	0x014C, r25
 64a:	80 93 4b 01 	sts	0x014B, r24
 64e:	12 82       	std	Z+2, r1	; 0x02
 650:	e2 2f       	mov	r30, r18
 652:	f0 e0       	ldi	r31, 0x00	; 0
 654:	e3 5d       	subi	r30, 0xD3	; 211
 656:	fe 4f       	sbci	r31, 0xFE	; 254
 658:	80 e8       	ldi	r24, 0x80	; 128
 65a:	80 83       	st	Z, r24
 65c:	08 95       	ret

0000065e <start_cal_sensor>:
 65e:	cf 93       	push	r28
 660:	c8 2f       	mov	r28, r24
 662:	0e 94 11 03 	call	0x622	; 0x622 <goto_no_detect>
 666:	8c 2f       	mov	r24, r28
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	fc 01       	movw	r30, r24
 66c:	ee 0f       	add	r30, r30
 66e:	ff 1f       	adc	r31, r31
 670:	e8 0f       	add	r30, r24
 672:	f9 1f       	adc	r31, r25
 674:	ee 0f       	add	r30, r30
 676:	ff 1f       	adc	r31, r31
 678:	e1 5b       	subi	r30, 0xB1	; 177
 67a:	fe 4f       	sbci	r31, 0xFE	; 254
 67c:	81 e0       	ldi	r24, 0x01	; 1
 67e:	80 83       	st	Z, r24
 680:	8f e0       	ldi	r24, 0x0F	; 15
 682:	81 83       	std	Z+1, r24	; 0x01
 684:	cf 91       	pop	r28
 686:	08 95       	ret

00000688 <process_sensor>:
 688:	2f 92       	push	r2
 68a:	3f 92       	push	r3
 68c:	4f 92       	push	r4
 68e:	5f 92       	push	r5
 690:	6f 92       	push	r6
 692:	7f 92       	push	r7
 694:	8f 92       	push	r8
 696:	9f 92       	push	r9
 698:	bf 92       	push	r11
 69a:	cf 92       	push	r12
 69c:	df 92       	push	r13
 69e:	ef 92       	push	r14
 6a0:	ff 92       	push	r15
 6a2:	0f 93       	push	r16
 6a4:	1f 93       	push	r17
 6a6:	cf 93       	push	r28
 6a8:	df 93       	push	r29
 6aa:	0f 92       	push	r0
 6ac:	cd b7       	in	r28, 0x3d	; 61
 6ae:	de b7       	in	r29, 0x3e	; 62
 6b0:	08 2f       	mov	r16, r24
 6b2:	16 2f       	mov	r17, r22
 6b4:	0e 94 be 02 	call	0x57c	; 0x57c <qt_get_sensor_delta>
 6b8:	4c 01       	movw	r8, r24
 6ba:	c0 2e       	mov	r12, r16
 6bc:	dd 24       	eor	r13, r13
 6be:	b6 01       	movw	r22, r12
 6c0:	66 0f       	add	r22, r22
 6c2:	77 1f       	adc	r23, r23
 6c4:	fb 01       	movw	r30, r22
 6c6:	ec 0d       	add	r30, r12
 6c8:	fd 1d       	adc	r31, r13
 6ca:	ee 0f       	add	r30, r30
 6cc:	ff 1f       	adc	r31, r31
 6ce:	e1 5b       	subi	r30, 0xB1	; 177
 6d0:	fe 4f       	sbci	r31, 0xFE	; 254
 6d2:	24 81       	ldd	r18, Z+4	; 0x04
 6d4:	43 81       	ldd	r20, Z+3	; 0x03
 6d6:	50 e0       	ldi	r21, 0x00	; 0
 6d8:	82 2f       	mov	r24, r18
 6da:	83 70       	andi	r24, 0x03	; 3
 6dc:	90 e0       	ldi	r25, 0x00	; 0
 6de:	01 96       	adiw	r24, 0x01	; 1
 6e0:	fa 01       	movw	r30, r20
 6e2:	02 c0       	rjmp	.+4      	; 0x6e8 <process_sensor+0x60>
 6e4:	f5 95       	asr	r31
 6e6:	e7 95       	ror	r30
 6e8:	8a 95       	dec	r24
 6ea:	e2 f7       	brpl	.-8      	; 0x6e4 <process_sensor+0x5c>
 6ec:	cf 01       	movw	r24, r30
 6ee:	e2 30       	cpi	r30, 0x02	; 2
 6f0:	08 f4       	brcc	.+2      	; 0x6f4 <process_sensor+0x6c>
 6f2:	82 e0       	ldi	r24, 0x02	; 2
 6f4:	da 01       	movw	r26, r20
 6f6:	a8 1b       	sub	r26, r24
 6f8:	b1 09       	sbc	r27, r1
 6fa:	fb 01       	movw	r30, r22
 6fc:	ec 0d       	add	r30, r12
 6fe:	fd 1d       	adc	r31, r13
 700:	ee 0f       	add	r30, r30
 702:	ff 1f       	adc	r31, r31
 704:	e1 5b       	subi	r30, 0xB1	; 177
 706:	fe 4f       	sbci	r31, 0xFE	; 254
 708:	80 81       	ld	r24, Z
 70a:	84 30       	cpi	r24, 0x04	; 4
 70c:	09 f4       	brne	.+2      	; 0x710 <process_sensor+0x88>
 70e:	e4 c0       	rjmp	.+456    	; 0x8d8 <process_sensor+0x250>
 710:	85 30       	cpi	r24, 0x05	; 5
 712:	30 f4       	brcc	.+12     	; 0x720 <process_sensor+0x98>
 714:	81 30       	cpi	r24, 0x01	; 1
 716:	71 f0       	breq	.+28     	; 0x734 <process_sensor+0xac>
 718:	82 30       	cpi	r24, 0x02	; 2
 71a:	09 f0       	breq	.+2      	; 0x71e <process_sensor+0x96>
 71c:	49 c2       	rjmp	.+1170   	; 0xbb0 <__stack+0x2b1>
 71e:	61 c0       	rjmp	.+194    	; 0x7e2 <process_sensor+0x15a>
 720:	80 31       	cpi	r24, 0x10	; 16
 722:	09 f4       	brne	.+2      	; 0x726 <process_sensor+0x9e>
 724:	79 c1       	rjmp	.+754    	; 0xa18 <__stack+0x119>
 726:	80 32       	cpi	r24, 0x20	; 32
 728:	09 f4       	brne	.+2      	; 0x72c <process_sensor+0xa4>
 72a:	18 c2       	rjmp	.+1072   	; 0xb5c <__stack+0x25d>
 72c:	88 30       	cpi	r24, 0x08	; 8
 72e:	09 f0       	breq	.+2      	; 0x732 <process_sensor+0xaa>
 730:	3f c2       	rjmp	.+1150   	; 0xbb0 <__stack+0x2b1>
 732:	db c1       	rjmp	.+950    	; 0xaea <__stack+0x1eb>
 734:	40 91 4b 01 	lds	r20, 0x014B
 738:	50 91 4c 01 	lds	r21, 0x014C
 73c:	ca 01       	movw	r24, r20
 73e:	92 60       	ori	r25, 0x02	; 2
 740:	90 93 4c 01 	sts	0x014C, r25
 744:	80 93 4b 01 	sts	0x014B, r24
 748:	85 81       	ldd	r24, Z+5	; 0x05
 74a:	61 81       	ldd	r22, Z+1	; 0x01
 74c:	90 e0       	ldi	r25, 0x00	; 0
 74e:	6a 30       	cpi	r22, 0x0A	; 10
 750:	80 f0       	brcs	.+32     	; 0x772 <process_sensor+0xea>
 752:	fc 01       	movw	r30, r24
 754:	ee 0f       	add	r30, r30
 756:	ff 1f       	adc	r31, r31
 758:	ee 5b       	subi	r30, 0xBE	; 190
 75a:	fe 4f       	sbci	r31, 0xFE	; 254
 75c:	dc 01       	movw	r26, r24
 75e:	aa 0f       	add	r26, r26
 760:	bb 1f       	adc	r27, r27
 762:	a6 5c       	subi	r26, 0xC6	; 198
 764:	be 4f       	sbci	r27, 0xFE	; 254
 766:	8d 91       	ld	r24, X+
 768:	9c 91       	ld	r25, X
 76a:	11 97       	sbiw	r26, 0x01	; 1
 76c:	91 83       	std	Z+1, r25	; 0x01
 76e:	80 83       	st	Z, r24
 770:	1d c0       	rjmp	.+58     	; 0x7ac <process_sensor+0x124>
 772:	dc 01       	movw	r26, r24
 774:	aa 0f       	add	r26, r26
 776:	bb 1f       	adc	r27, r27
 778:	ae 5b       	subi	r26, 0xBE	; 190
 77a:	be 4f       	sbci	r27, 0xFE	; 254
 77c:	2d 91       	ld	r18, X+
 77e:	3c 91       	ld	r19, X
 780:	11 97       	sbiw	r26, 0x01	; 1
 782:	fc 01       	movw	r30, r24
 784:	ee 0f       	add	r30, r30
 786:	ff 1f       	adc	r31, r31
 788:	e6 5c       	subi	r30, 0xC6	; 198
 78a:	fe 4f       	sbci	r31, 0xFE	; 254
 78c:	80 81       	ld	r24, Z
 78e:	91 81       	ldd	r25, Z+1	; 0x01
 790:	82 17       	cp	r24, r18
 792:	93 07       	cpc	r25, r19
 794:	18 f4       	brcc	.+6      	; 0x79c <process_sensor+0x114>
 796:	21 50       	subi	r18, 0x01	; 1
 798:	30 40       	sbci	r19, 0x00	; 0
 79a:	05 c0       	rjmp	.+10     	; 0x7a6 <process_sensor+0x11e>
 79c:	28 17       	cp	r18, r24
 79e:	39 07       	cpc	r19, r25
 7a0:	58 f4       	brcc	.+22     	; 0x7b8 <process_sensor+0x130>
 7a2:	2f 5f       	subi	r18, 0xFF	; 255
 7a4:	3f 4f       	sbci	r19, 0xFF	; 255
 7a6:	11 96       	adiw	r26, 0x01	; 1
 7a8:	3c 93       	st	X, r19
 7aa:	2e 93       	st	-X, r18
 7ac:	48 60       	ori	r20, 0x08	; 8
 7ae:	52 60       	ori	r21, 0x02	; 2
 7b0:	50 93 4c 01 	sts	0x014C, r21
 7b4:	40 93 4b 01 	sts	0x014B, r20
 7b8:	61 50       	subi	r22, 0x01	; 1
 7ba:	f6 01       	movw	r30, r12
 7bc:	ee 0f       	add	r30, r30
 7be:	ff 1f       	adc	r31, r31
 7c0:	ec 0d       	add	r30, r12
 7c2:	fd 1d       	adc	r31, r13
 7c4:	ee 0f       	add	r30, r30
 7c6:	ff 1f       	adc	r31, r31
 7c8:	e1 5b       	subi	r30, 0xB1	; 177
 7ca:	fe 4f       	sbci	r31, 0xFE	; 254
 7cc:	61 83       	std	Z+1, r22	; 0x01
 7ce:	66 23       	and	r22, r22
 7d0:	19 f4       	brne	.+6      	; 0x7d8 <process_sensor+0x150>
 7d2:	80 2f       	mov	r24, r16
 7d4:	0e 94 11 03 	call	0x622	; 0x622 <goto_no_detect>
 7d8:	80 91 33 01 	lds	r24, 0x0133
 7dc:	80 93 4d 01 	sts	0x014D, r24
 7e0:	df c1       	rjmp	.+958    	; 0xba0 <__stack+0x2a1>
 7e2:	22 ff       	sbrs	r18, 2
 7e4:	08 c0       	rjmp	.+16     	; 0x7f6 <process_sensor+0x16e>
 7e6:	a5 81       	ldd	r26, Z+5	; 0x05
 7e8:	b0 e0       	ldi	r27, 0x00	; 0
 7ea:	a3 5d       	subi	r26, 0xD3	; 211
 7ec:	be 4f       	sbci	r27, 0xFE	; 254
 7ee:	1c 92       	st	X, r1
 7f0:	80 e2       	ldi	r24, 0x20	; 32
 7f2:	80 83       	st	Z, r24
 7f4:	cc c1       	rjmp	.+920    	; 0xb8e <__stack+0x28f>
 7f6:	c4 01       	movw	r24, r8
 7f8:	97 fe       	sbrs	r9, 7
 7fa:	02 c0       	rjmp	.+4      	; 0x800 <process_sensor+0x178>
 7fc:	80 e0       	ldi	r24, 0x00	; 0
 7fe:	90 e0       	ldi	r25, 0x00	; 0
 800:	84 17       	cp	r24, r20
 802:	95 07       	cpc	r25, r21
 804:	68 f0       	brcs	.+26     	; 0x820 <process_sensor+0x198>
 806:	f6 01       	movw	r30, r12
 808:	ee 0f       	add	r30, r30
 80a:	ff 1f       	adc	r31, r31
 80c:	ec 0d       	add	r30, r12
 80e:	fd 1d       	adc	r31, r13
 810:	ee 0f       	add	r30, r30
 812:	ff 1f       	adc	r31, r31
 814:	e1 5b       	subi	r30, 0xB1	; 177
 816:	fe 4f       	sbci	r31, 0xFE	; 254
 818:	84 e0       	ldi	r24, 0x04	; 4
 81a:	80 83       	st	Z, r24
 81c:	12 82       	std	Z+2, r1	; 0x02
 81e:	c2 c1       	rjmp	.+900    	; 0xba4 <__stack+0x2a5>
 820:	11 23       	and	r17, r17
 822:	09 f4       	brne	.+2      	; 0x826 <process_sensor+0x19e>
 824:	c5 c1       	rjmp	.+906    	; 0xbb0 <__stack+0x2b1>
 826:	80 91 4d 01 	lds	r24, 0x014D
 82a:	88 23       	and	r24, r24
 82c:	09 f0       	breq	.+2      	; 0x830 <process_sensor+0x1a8>
 82e:	c0 c1       	rjmp	.+896    	; 0xbb0 <__stack+0x2b1>
 830:	f6 01       	movw	r30, r12
 832:	ee 0f       	add	r30, r30
 834:	ff 1f       	adc	r31, r31
 836:	ec 0d       	add	r30, r12
 838:	fd 1d       	adc	r31, r13
 83a:	ee 0f       	add	r30, r30
 83c:	ff 1f       	adc	r31, r31
 83e:	e1 5b       	subi	r30, 0xB1	; 177
 840:	fe 4f       	sbci	r31, 0xFE	; 254
 842:	25 81       	ldd	r18, Z+5	; 0x05
 844:	30 e0       	ldi	r19, 0x00	; 0
 846:	d9 01       	movw	r26, r18
 848:	aa 0f       	add	r26, r26
 84a:	bb 1f       	adc	r27, r27
 84c:	ae 5b       	subi	r26, 0xBE	; 190
 84e:	be 4f       	sbci	r27, 0xFE	; 254
 850:	8d 91       	ld	r24, X+
 852:	9c 91       	ld	r25, X
 854:	11 97       	sbiw	r26, 0x01	; 1
 856:	f9 01       	movw	r30, r18
 858:	ee 0f       	add	r30, r30
 85a:	ff 1f       	adc	r31, r31
 85c:	e6 5c       	subi	r30, 0xC6	; 198
 85e:	fe 4f       	sbci	r31, 0xFE	; 254
 860:	40 81       	ld	r20, Z
 862:	51 81       	ldd	r21, Z+1	; 0x01
 864:	f9 01       	movw	r30, r18
 866:	e3 5d       	subi	r30, 0xD3	; 211
 868:	fe 4f       	sbci	r31, 0xFE	; 254
 86a:	84 17       	cp	r24, r20
 86c:	95 07       	cpc	r25, r21
 86e:	68 f4       	brcc	.+26     	; 0x88a <process_sensor+0x202>
 870:	20 81       	ld	r18, Z
 872:	21 0f       	add	r18, r17
 874:	20 83       	st	Z, r18
 876:	30 91 36 01 	lds	r19, 0x0136
 87a:	30 58       	subi	r19, 0x80	; 128
 87c:	23 17       	cp	r18, r19
 87e:	08 f4       	brcc	.+2      	; 0x882 <process_sensor+0x1fa>
 880:	97 c1       	rjmp	.+814    	; 0xbb0 <__stack+0x2b1>
 882:	20 e8       	ldi	r18, 0x80	; 128
 884:	20 83       	st	Z, r18
 886:	01 96       	adiw	r24, 0x01	; 1
 888:	10 c0       	rjmp	.+32     	; 0x8aa <process_sensor+0x222>
 88a:	48 17       	cp	r20, r24
 88c:	59 07       	cpc	r21, r25
 88e:	d0 f4       	brcc	.+52     	; 0x8c4 <process_sensor+0x23c>
 890:	20 81       	ld	r18, Z
 892:	21 1b       	sub	r18, r17
 894:	20 83       	st	Z, r18
 896:	30 e8       	ldi	r19, 0x80	; 128
 898:	40 91 35 01 	lds	r20, 0x0135
 89c:	53 2f       	mov	r21, r19
 89e:	54 1b       	sub	r21, r20
 8a0:	52 17       	cp	r21, r18
 8a2:	08 f4       	brcc	.+2      	; 0x8a6 <process_sensor+0x21e>
 8a4:	85 c1       	rjmp	.+778    	; 0xbb0 <__stack+0x2b1>
 8a6:	30 83       	st	Z, r19
 8a8:	01 97       	sbiw	r24, 0x01	; 1
 8aa:	11 96       	adiw	r26, 0x01	; 1
 8ac:	9c 93       	st	X, r25
 8ae:	8e 93       	st	-X, r24
 8b0:	80 91 4b 01 	lds	r24, 0x014B
 8b4:	90 91 4c 01 	lds	r25, 0x014C
 8b8:	88 60       	ori	r24, 0x08	; 8
 8ba:	90 93 4c 01 	sts	0x014C, r25
 8be:	80 93 4b 01 	sts	0x014B, r24
 8c2:	76 c1       	rjmp	.+748    	; 0xbb0 <__stack+0x2b1>
 8c4:	80 81       	ld	r24, Z
 8c6:	81 38       	cpi	r24, 0x81	; 129
 8c8:	10 f0       	brcs	.+4      	; 0x8ce <process_sensor+0x246>
 8ca:	81 50       	subi	r24, 0x01	; 1
 8cc:	80 83       	st	Z, r24
 8ce:	80 81       	ld	r24, Z
 8d0:	87 fd       	sbrc	r24, 7
 8d2:	6e c1       	rjmp	.+732    	; 0xbb0 <__stack+0x2b1>
 8d4:	8f 5f       	subi	r24, 0xFF	; 255
 8d6:	4e c1       	rjmp	.+668    	; 0xb74 <__stack+0x275>
 8d8:	c4 01       	movw	r24, r8
 8da:	97 fe       	sbrs	r9, 7
 8dc:	02 c0       	rjmp	.+4      	; 0x8e2 <process_sensor+0x25a>
 8de:	80 e0       	ldi	r24, 0x00	; 0
 8e0:	90 e0       	ldi	r25, 0x00	; 0
 8e2:	84 17       	cp	r24, r20
 8e4:	95 07       	cpc	r25, r21
 8e6:	08 f4       	brcc	.+2      	; 0x8ea <process_sensor+0x262>
 8e8:	47 c1       	rjmp	.+654    	; 0xb78 <__stack+0x279>
 8ea:	80 91 33 01 	lds	r24, 0x0133
 8ee:	80 93 4d 01 	sts	0x014D, r24
 8f2:	f6 01       	movw	r30, r12
 8f4:	ee 0f       	add	r30, r30
 8f6:	ff 1f       	adc	r31, r31
 8f8:	ec 0d       	add	r30, r12
 8fa:	fd 1d       	adc	r31, r13
 8fc:	ee 0f       	add	r30, r30
 8fe:	ff 1f       	adc	r31, r31
 900:	e1 5b       	subi	r30, 0xB1	; 177
 902:	fe 4f       	sbci	r31, 0xFE	; 254
 904:	82 81       	ldd	r24, Z+2	; 0x02
 906:	8f 5f       	subi	r24, 0xFF	; 255
 908:	82 83       	std	Z+2, r24	; 0x02
 90a:	84 81       	ldd	r24, Z+4	; 0x04
 90c:	90 e0       	ldi	r25, 0x00	; 0
 90e:	88 73       	andi	r24, 0x38	; 56
 910:	90 70       	andi	r25, 0x00	; 0
 912:	a3 e0       	ldi	r26, 0x03	; 3
 914:	96 95       	lsr	r25
 916:	87 95       	ror	r24
 918:	aa 95       	dec	r26
 91a:	e1 f7       	brne	.-8      	; 0x914 <__stack+0x15>
 91c:	b8 2e       	mov	r11, r24
 91e:	88 23       	and	r24, r24
 920:	d9 f5       	brne	.+118    	; 0x998 <__stack+0x99>
 922:	4e c0       	rjmp	.+156    	; 0x9c0 <__stack+0xc1>
 924:	10 17       	cp	r17, r16
 926:	b1 f1       	breq	.+108    	; 0x994 <__stack+0x95>
 928:	81 2f       	mov	r24, r17
 92a:	90 e0       	ldi	r25, 0x00	; 0
 92c:	1c 01       	movw	r2, r24
 92e:	22 0c       	add	r2, r2
 930:	33 1c       	adc	r3, r3
 932:	28 0e       	add	r2, r24
 934:	39 1e       	adc	r3, r25
 936:	22 0c       	add	r2, r2
 938:	33 1c       	adc	r3, r3
 93a:	6f e4       	ldi	r22, 0x4F	; 79
 93c:	71 e0       	ldi	r23, 0x01	; 1
 93e:	26 0e       	add	r2, r22
 940:	37 1e       	adc	r3, r23
 942:	f1 01       	movw	r30, r2
 944:	84 81       	ldd	r24, Z+4	; 0x04
 946:	90 e0       	ldi	r25, 0x00	; 0
 948:	88 73       	andi	r24, 0x38	; 56
 94a:	90 70       	andi	r25, 0x00	; 0
 94c:	53 e0       	ldi	r21, 0x03	; 3
 94e:	96 95       	lsr	r25
 950:	87 95       	ror	r24
 952:	5a 95       	dec	r21
 954:	e1 f7       	brne	.-8      	; 0x94e <__stack+0x4f>
 956:	b8 16       	cp	r11, r24
 958:	e9 f4       	brne	.+58     	; 0x994 <__stack+0x95>
 95a:	81 2f       	mov	r24, r17
 95c:	29 83       	std	Y+1, r18	; 0x01
 95e:	0e 94 be 02 	call	0x57c	; 0x57c <qt_get_sensor_delta>
 962:	f1 01       	movw	r30, r2
 964:	33 81       	ldd	r19, Z+3	; 0x03
 966:	ac 01       	movw	r20, r24
 968:	43 1b       	sub	r20, r19
 96a:	51 09       	sbc	r21, r1
 96c:	f2 01       	movw	r30, r4
 96e:	80 81       	ld	r24, Z
 970:	b4 01       	movw	r22, r8
 972:	68 1b       	sub	r22, r24
 974:	71 09       	sbc	r23, r1
 976:	29 81       	ldd	r18, Y+1	; 0x01
 978:	64 17       	cp	r22, r20
 97a:	75 07       	cpc	r23, r21
 97c:	14 f4       	brge	.+4      	; 0x982 <__stack+0x83>
 97e:	f3 01       	movw	r30, r6
 980:	07 c0       	rjmp	.+14     	; 0x990 <__stack+0x91>
 982:	f1 01       	movw	r30, r2
 984:	80 81       	ld	r24, Z
 986:	80 31       	cpi	r24, 0x10	; 16
 988:	11 f0       	breq	.+4      	; 0x98e <__stack+0x8f>
 98a:	88 30       	cpi	r24, 0x08	; 8
 98c:	19 f4       	brne	.+6      	; 0x994 <__stack+0x95>
 98e:	f7 01       	movw	r30, r14
 990:	10 82       	st	Z, r1
 992:	21 e0       	ldi	r18, 0x01	; 1
 994:	1f 5f       	subi	r17, 0xFF	; 255
 996:	0d c0       	rjmp	.+26     	; 0x9b2 <__stack+0xb3>
 998:	20 e0       	ldi	r18, 0x00	; 0
 99a:	10 e0       	ldi	r17, 0x00	; 0
 99c:	83 e0       	ldi	r24, 0x03	; 3
 99e:	48 2e       	mov	r4, r24
 9a0:	51 2c       	mov	r5, r1
 9a2:	4e 0e       	add	r4, r30
 9a4:	5f 1e       	adc	r5, r31
 9a6:	7f 01       	movw	r14, r30
 9a8:	62 e0       	ldi	r22, 0x02	; 2
 9aa:	70 e0       	ldi	r23, 0x00	; 0
 9ac:	e6 0e       	add	r14, r22
 9ae:	f7 1e       	adc	r15, r23
 9b0:	37 01       	movw	r6, r14
 9b2:	80 91 4e 01 	lds	r24, 0x014E
 9b6:	18 17       	cp	r17, r24
 9b8:	08 f4       	brcc	.+2      	; 0x9bc <__stack+0xbd>
 9ba:	b4 cf       	rjmp	.-152    	; 0x924 <__stack+0x25>
 9bc:	22 23       	and	r18, r18
 9be:	79 f4       	brne	.+30     	; 0x9de <__stack+0xdf>
 9c0:	80 91 32 01 	lds	r24, 0x0132
 9c4:	88 23       	and	r24, r24
 9c6:	59 f0       	breq	.+22     	; 0x9de <__stack+0xdf>
 9c8:	80 91 4b 01 	lds	r24, 0x014B
 9cc:	90 91 4c 01 	lds	r25, 0x014C
 9d0:	98 60       	ori	r25, 0x08	; 8
 9d2:	90 93 4c 01 	sts	0x014C, r25
 9d6:	80 93 4b 01 	sts	0x014B, r24
 9da:	81 e0       	ldi	r24, 0x01	; 1
 9dc:	01 c0       	rjmp	.+2      	; 0x9e0 <__stack+0xe1>
 9de:	80 e0       	ldi	r24, 0x00	; 0
 9e0:	f6 01       	movw	r30, r12
 9e2:	ee 0f       	add	r30, r30
 9e4:	ff 1f       	adc	r31, r31
 9e6:	ec 0d       	add	r30, r12
 9e8:	fd 1d       	adc	r31, r13
 9ea:	ee 0f       	add	r30, r30
 9ec:	ff 1f       	adc	r31, r31
 9ee:	e1 5b       	subi	r30, 0xB1	; 177
 9f0:	fe 4f       	sbci	r31, 0xFE	; 254
 9f2:	22 81       	ldd	r18, Z+2	; 0x02
 9f4:	90 91 32 01 	lds	r25, 0x0132
 9f8:	29 17       	cp	r18, r25
 9fa:	08 f4       	brcc	.+2      	; 0x9fe <__stack+0xff>
 9fc:	da c0       	rjmp	.+436    	; 0xbb2 <__stack+0x2b3>
 9fe:	20 91 4b 01 	lds	r18, 0x014B
 a02:	30 91 4c 01 	lds	r19, 0x014C
 a06:	23 60       	ori	r18, 0x03	; 3
 a08:	30 93 4c 01 	sts	0x014C, r19
 a0c:	20 93 4b 01 	sts	0x014B, r18
 a10:	90 e1       	ldi	r25, 0x10	; 16
 a12:	90 83       	st	Z, r25
 a14:	11 82       	std	Z+1, r1	; 0x01
 a16:	cd c0       	rjmp	.+410    	; 0xbb2 <__stack+0x2b3>
 a18:	40 91 4b 01 	lds	r20, 0x014B
 a1c:	50 91 4c 01 	lds	r21, 0x014C
 a20:	22 ff       	sbrs	r18, 2
 a22:	0e c0       	rjmp	.+28     	; 0xa40 <__stack+0x141>
 a24:	a5 81       	ldd	r26, Z+5	; 0x05
 a26:	b0 e0       	ldi	r27, 0x00	; 0
 a28:	a3 5d       	subi	r26, 0xD3	; 211
 a2a:	be 4f       	sbci	r27, 0xFE	; 254
 a2c:	80 e8       	ldi	r24, 0x80	; 128
 a2e:	8c 93       	st	X, r24
 a30:	80 e2       	ldi	r24, 0x20	; 32
 a32:	80 83       	st	Z, r24
 a34:	50 61       	ori	r21, 0x10	; 16
 a36:	50 93 4c 01 	sts	0x014C, r21
 a3a:	40 93 4b 01 	sts	0x014B, r20
 a3e:	4d c0       	rjmp	.+154    	; 0xada <__stack+0x1db>
 a40:	c4 01       	movw	r24, r8
 a42:	97 fe       	sbrs	r9, 7
 a44:	02 c0       	rjmp	.+4      	; 0xa4a <__stack+0x14b>
 a46:	80 e0       	ldi	r24, 0x00	; 0
 a48:	90 e0       	ldi	r25, 0x00	; 0
 a4a:	96 01       	movw	r18, r12
 a4c:	22 0f       	add	r18, r18
 a4e:	33 1f       	adc	r19, r19
 a50:	8a 17       	cp	r24, r26
 a52:	9b 07       	cpc	r25, r27
 a54:	78 f4       	brcc	.+30     	; 0xa74 <__stack+0x175>
 a56:	2c 0d       	add	r18, r12
 a58:	3d 1d       	adc	r19, r13
 a5a:	22 0f       	add	r18, r18
 a5c:	33 1f       	adc	r19, r19
 a5e:	21 5b       	subi	r18, 0xB1	; 177
 a60:	3e 4f       	sbci	r19, 0xFE	; 254
 a62:	88 e0       	ldi	r24, 0x08	; 8
 a64:	f9 01       	movw	r30, r18
 a66:	80 83       	st	Z, r24
 a68:	80 91 4b 01 	lds	r24, 0x014B
 a6c:	90 91 4c 01 	lds	r25, 0x014C
 a70:	94 60       	ori	r25, 0x04	; 4
 a72:	2f c0       	rjmp	.+94     	; 0xad2 <__stack+0x1d3>
 a74:	ca 01       	movw	r24, r20
 a76:	81 60       	ori	r24, 0x01	; 1
 a78:	90 93 4c 01 	sts	0x014C, r25
 a7c:	80 93 4b 01 	sts	0x014B, r24
 a80:	f9 01       	movw	r30, r18
 a82:	ec 0d       	add	r30, r12
 a84:	fd 1d       	adc	r31, r13
 a86:	ee 0f       	add	r30, r30
 a88:	ff 1f       	adc	r31, r31
 a8a:	e1 5b       	subi	r30, 0xB1	; 177
 a8c:	fe 4f       	sbci	r31, 0xFE	; 254
 a8e:	82 81       	ldd	r24, Z+2	; 0x02
 a90:	90 91 32 01 	lds	r25, 0x0132
 a94:	89 17       	cp	r24, r25
 a96:	10 f4       	brcc	.+4      	; 0xa9c <__stack+0x19d>
 a98:	8f 5f       	subi	r24, 0xFF	; 255
 a9a:	82 83       	std	Z+2, r24	; 0x02
 a9c:	90 91 34 01 	lds	r25, 0x0134
 aa0:	99 23       	and	r25, r25
 aa2:	e9 f0       	breq	.+58     	; 0xade <__stack+0x1df>
 aa4:	f6 01       	movw	r30, r12
 aa6:	ee 0f       	add	r30, r30
 aa8:	ff 1f       	adc	r31, r31
 aaa:	ec 0d       	add	r30, r12
 aac:	fd 1d       	adc	r31, r13
 aae:	ee 0f       	add	r30, r30
 ab0:	ff 1f       	adc	r31, r31
 ab2:	e1 5b       	subi	r30, 0xB1	; 177
 ab4:	fe 4f       	sbci	r31, 0xFE	; 254
 ab6:	81 81       	ldd	r24, Z+1	; 0x01
 ab8:	89 17       	cp	r24, r25
 aba:	18 f4       	brcc	.+6      	; 0xac2 <__stack+0x1c3>
 abc:	81 0f       	add	r24, r17
 abe:	81 83       	std	Z+1, r24	; 0x01
 ac0:	0e c0       	rjmp	.+28     	; 0xade <__stack+0x1df>
 ac2:	80 2f       	mov	r24, r16
 ac4:	0e 94 2f 03 	call	0x65e	; 0x65e <start_cal_sensor>
 ac8:	80 91 4b 01 	lds	r24, 0x014B
 acc:	90 91 4c 01 	lds	r25, 0x014C
 ad0:	92 60       	ori	r25, 0x02	; 2
 ad2:	90 93 4c 01 	sts	0x014C, r25
 ad6:	80 93 4b 01 	sts	0x014B, r24
 ada:	81 e0       	ldi	r24, 0x01	; 1
 adc:	01 c0       	rjmp	.+2      	; 0xae0 <__stack+0x1e1>
 ade:	80 e0       	ldi	r24, 0x00	; 0
 ae0:	90 91 33 01 	lds	r25, 0x0133
 ae4:	90 93 4d 01 	sts	0x014D, r25
 ae8:	64 c0       	rjmp	.+200    	; 0xbb2 <__stack+0x2b3>
 aea:	80 91 33 01 	lds	r24, 0x0133
 aee:	80 93 4d 01 	sts	0x014D, r24
 af2:	82 81       	ldd	r24, Z+2	; 0x02
 af4:	88 23       	and	r24, r24
 af6:	09 f4       	brne	.+2      	; 0xafa <__stack+0x1fb>
 af8:	3f c0       	rjmp	.+126    	; 0xb78 <__stack+0x279>
 afa:	c4 01       	movw	r24, r8
 afc:	97 fe       	sbrs	r9, 7
 afe:	02 c0       	rjmp	.+4      	; 0xb04 <__stack+0x205>
 b00:	80 e0       	ldi	r24, 0x00	; 0
 b02:	90 e0       	ldi	r25, 0x00	; 0
 b04:	20 91 4b 01 	lds	r18, 0x014B
 b08:	30 91 4c 01 	lds	r19, 0x014C
 b0c:	a8 17       	cp	r26, r24
 b0e:	b9 07       	cpc	r27, r25
 b10:	90 f4       	brcc	.+36     	; 0xb36 <__stack+0x237>
 b12:	f6 01       	movw	r30, r12
 b14:	ee 0f       	add	r30, r30
 b16:	ff 1f       	adc	r31, r31
 b18:	ec 0d       	add	r30, r12
 b1a:	fd 1d       	adc	r31, r13
 b1c:	ee 0f       	add	r30, r30
 b1e:	ff 1f       	adc	r31, r31
 b20:	e1 5b       	subi	r30, 0xB1	; 177
 b22:	fe 4f       	sbci	r31, 0xFE	; 254
 b24:	80 e1       	ldi	r24, 0x10	; 16
 b26:	80 83       	st	Z, r24
 b28:	21 60       	ori	r18, 0x01	; 1
 b2a:	30 93 4c 01 	sts	0x014C, r19
 b2e:	20 93 4b 01 	sts	0x014B, r18
 b32:	80 e0       	ldi	r24, 0x00	; 0
 b34:	06 c0       	rjmp	.+12     	; 0xb42 <__stack+0x243>
 b36:	34 60       	ori	r19, 0x04	; 4
 b38:	30 93 4c 01 	sts	0x014C, r19
 b3c:	20 93 4b 01 	sts	0x014B, r18
 b40:	81 e0       	ldi	r24, 0x01	; 1
 b42:	f6 01       	movw	r30, r12
 b44:	ee 0f       	add	r30, r30
 b46:	ff 1f       	adc	r31, r31
 b48:	ec 0d       	add	r30, r12
 b4a:	fd 1d       	adc	r31, r13
 b4c:	ee 0f       	add	r30, r30
 b4e:	ff 1f       	adc	r31, r31
 b50:	e1 5b       	subi	r30, 0xB1	; 177
 b52:	fe 4f       	sbci	r31, 0xFE	; 254
 b54:	92 81       	ldd	r25, Z+2	; 0x02
 b56:	91 50       	subi	r25, 0x01	; 1
 b58:	92 83       	std	Z+2, r25	; 0x02
 b5a:	2b c0       	rjmp	.+86     	; 0xbb2 <__stack+0x2b3>
 b5c:	a5 81       	ldd	r26, Z+5	; 0x05
 b5e:	b0 e0       	ldi	r27, 0x00	; 0
 b60:	a3 5d       	subi	r26, 0xD3	; 211
 b62:	be 4f       	sbci	r27, 0xFE	; 254
 b64:	8c 91       	ld	r24, X
 b66:	8f 5f       	subi	r24, 0xFF	; 255
 b68:	8c 93       	st	X, r24
 b6a:	22 fd       	sbrc	r18, 2
 b6c:	09 c0       	rjmp	.+18     	; 0xb80 <__stack+0x281>
 b6e:	87 ff       	sbrs	r24, 7
 b70:	03 c0       	rjmp	.+6      	; 0xb78 <__stack+0x279>
 b72:	80 e1       	ldi	r24, 0x10	; 16
 b74:	80 83       	st	Z, r24
 b76:	1c c0       	rjmp	.+56     	; 0xbb0 <__stack+0x2b1>
 b78:	80 2f       	mov	r24, r16
 b7a:	0e 94 11 03 	call	0x622	; 0x622 <goto_no_detect>
 b7e:	18 c0       	rjmp	.+48     	; 0xbb0 <__stack+0x2b1>
 b80:	90 91 37 01 	lds	r25, 0x0137
 b84:	89 17       	cp	r24, r25
 b86:	70 f0       	brcs	.+28     	; 0xba4 <__stack+0x2a5>
 b88:	80 2f       	mov	r24, r16
 b8a:	0e 94 2f 03 	call	0x65e	; 0x65e <start_cal_sensor>
 b8e:	80 91 4b 01 	lds	r24, 0x014B
 b92:	90 91 4c 01 	lds	r25, 0x014C
 b96:	90 61       	ori	r25, 0x10	; 16
 b98:	90 93 4c 01 	sts	0x014C, r25
 b9c:	80 93 4b 01 	sts	0x014B, r24
 ba0:	81 e0       	ldi	r24, 0x01	; 1
 ba2:	07 c0       	rjmp	.+14     	; 0xbb2 <__stack+0x2b3>
 ba4:	80 91 4b 01 	lds	r24, 0x014B
 ba8:	90 91 4c 01 	lds	r25, 0x014C
 bac:	94 60       	ori	r25, 0x04	; 4
 bae:	f4 cf       	rjmp	.-24     	; 0xb98 <__stack+0x299>
 bb0:	80 e0       	ldi	r24, 0x00	; 0
 bb2:	0f 90       	pop	r0
 bb4:	df 91       	pop	r29
 bb6:	cf 91       	pop	r28
 bb8:	1f 91       	pop	r17
 bba:	0f 91       	pop	r16
 bbc:	ff 90       	pop	r15
 bbe:	ef 90       	pop	r14
 bc0:	df 90       	pop	r13
 bc2:	cf 90       	pop	r12
 bc4:	bf 90       	pop	r11
 bc6:	9f 90       	pop	r9
 bc8:	8f 90       	pop	r8
 bca:	7f 90       	pop	r7
 bcc:	6f 90       	pop	r6
 bce:	5f 90       	pop	r5
 bd0:	4f 90       	pop	r4
 bd2:	3f 90       	pop	r3
 bd4:	2f 90       	pop	r2
 bd6:	08 95       	ret

00000bd8 <get_channel_delta>:
 bd8:	90 e0       	ldi	r25, 0x00	; 0
 bda:	fc 01       	movw	r30, r24
 bdc:	34 96       	adiw	r30, 0x04	; 4
 bde:	2a e3       	ldi	r18, 0x3A	; 58
 be0:	31 e0       	ldi	r19, 0x01	; 1
 be2:	ee 0f       	add	r30, r30
 be4:	ff 1f       	adc	r31, r31
 be6:	e2 0f       	add	r30, r18
 be8:	f3 1f       	adc	r31, r19
 bea:	dc 01       	movw	r26, r24
 bec:	aa 0f       	add	r26, r26
 bee:	bb 1f       	adc	r27, r27
 bf0:	a2 0f       	add	r26, r18
 bf2:	b3 1f       	adc	r27, r19
 bf4:	80 81       	ld	r24, Z
 bf6:	91 81       	ldd	r25, Z+1	; 0x01
 bf8:	2d 91       	ld	r18, X+
 bfa:	3c 91       	ld	r19, X
 bfc:	11 97       	sbiw	r26, 0x01	; 1
 bfe:	82 1b       	sub	r24, r18
 c00:	93 0b       	sbc	r25, r19
 c02:	08 95       	ret

00000c04 <burst_init>:
 c04:	0f 93       	push	r16
 c06:	cf 93       	push	r28
 c08:	df 93       	push	r29
 c0a:	81 e0       	ldi	r24, 0x01	; 1
 c0c:	80 93 18 01 	sts	0x0118, r24
 c10:	10 92 6c 01 	sts	0x016C, r1
 c14:	10 92 6d 01 	sts	0x016D, r1
 c18:	10 92 6e 01 	sts	0x016E, r1
 c1c:	10 92 6f 01 	sts	0x016F, r1
 c20:	10 92 70 01 	sts	0x0170, r1
 c24:	30 91 4e 01 	lds	r19, 0x014E
 c28:	c4 e5       	ldi	r28, 0x54	; 84
 c2a:	d1 e0       	ldi	r29, 0x01	; 1
 c2c:	20 e0       	ldi	r18, 0x00	; 0
 c2e:	61 e0       	ldi	r22, 0x01	; 1
 c30:	70 e0       	ldi	r23, 0x00	; 0
 c32:	38 c0       	rjmp	.+112    	; 0xca4 <burst_init+0xa0>
 c34:	e8 81       	ld	r30, Y
 c36:	8e 2f       	mov	r24, r30
 c38:	86 95       	lsr	r24
 c3a:	86 95       	lsr	r24
 c3c:	90 e0       	ldi	r25, 0x00	; 0
 c3e:	88 0f       	add	r24, r24
 c40:	99 1f       	adc	r25, r25
 c42:	dc 01       	movw	r26, r24
 c44:	ac 5f       	subi	r26, 0xFC	; 252
 c46:	be 4f       	sbci	r27, 0xFE	; 254
 c48:	ab 01       	movw	r20, r22
 c4a:	0c 90       	ld	r0, X
 c4c:	02 c0       	rjmp	.+4      	; 0xc52 <burst_init+0x4e>
 c4e:	44 0f       	add	r20, r20
 c50:	55 1f       	adc	r21, r21
 c52:	0a 94       	dec	r0
 c54:	e2 f7       	brpl	.-8      	; 0xc4e <burst_init+0x4a>
 c56:	50 91 6c 01 	lds	r21, 0x016C
 c5a:	54 2b       	or	r21, r20
 c5c:	50 93 6c 01 	sts	0x016C, r21
 c60:	8e 5f       	subi	r24, 0xFE	; 254
 c62:	9e 4f       	sbci	r25, 0xFE	; 254
 c64:	ab 01       	movw	r20, r22
 c66:	dc 01       	movw	r26, r24
 c68:	0c 90       	ld	r0, X
 c6a:	02 c0       	rjmp	.+4      	; 0xc70 <burst_init+0x6c>
 c6c:	44 0f       	add	r20, r20
 c6e:	55 1f       	adc	r21, r21
 c70:	0a 94       	dec	r0
 c72:	e2 f7       	brpl	.-8      	; 0xc6c <burst_init+0x68>
 c74:	ca 01       	movw	r24, r20
 c76:	90 91 6d 01 	lds	r25, 0x016D
 c7a:	98 2b       	or	r25, r24
 c7c:	90 93 6d 01 	sts	0x016D, r25
 c80:	e3 70       	andi	r30, 0x03	; 3
 c82:	f0 e0       	ldi	r31, 0x00	; 0
 c84:	ee 0f       	add	r30, r30
 c86:	ff 1f       	adc	r31, r31
 c88:	ee 0f       	add	r30, r30
 c8a:	ff 1f       	adc	r31, r31
 c8c:	ea 5f       	subi	r30, 0xFA	; 250
 c8e:	fe 4f       	sbci	r31, 0xFE	; 254
 c90:	a3 81       	ldd	r26, Z+3	; 0x03
 c92:	b0 e0       	ldi	r27, 0x00	; 0
 c94:	a4 59       	subi	r26, 0x94	; 148
 c96:	be 4f       	sbci	r27, 0xFE	; 254
 c98:	8c 91       	ld	r24, X
 c9a:	92 81       	ldd	r25, Z+2	; 0x02
 c9c:	89 2b       	or	r24, r25
 c9e:	8c 93       	st	X, r24
 ca0:	2f 5f       	subi	r18, 0xFF	; 255
 ca2:	26 96       	adiw	r28, 0x06	; 6
 ca4:	23 17       	cp	r18, r19
 ca6:	31 f6       	brne	.-116    	; 0xc34 <burst_init+0x30>
 ca8:	80 91 6d 01 	lds	r24, 0x016D
 cac:	60 91 6c 01 	lds	r22, 0x016C
 cb0:	40 91 6e 01 	lds	r20, 0x016E
 cb4:	20 91 6f 01 	lds	r18, 0x016F
 cb8:	00 91 70 01 	lds	r16, 0x0170
 cbc:	0e 94 b2 00 	call	0x164	; 0x164 <_00110000001_>
 cc0:	df 91       	pop	r29
 cc2:	cf 91       	pop	r28
 cc4:	0f 91       	pop	r16
 cc6:	08 95       	ret

00000cc8 <burst_reset>:
 cc8:	80 e4       	ldi	r24, 0x40	; 64
 cca:	80 93 19 01 	sts	0x0119, r24
 cce:	80 93 1a 01 	sts	0x011A, r24
 cd2:	80 93 1b 01 	sts	0x011B, r24
 cd6:	80 93 1c 01 	sts	0x011C, r24
 cda:	08 95       	ret

00000cdc <burst>:
 cdc:	a0 e0       	ldi	r26, 0x00	; 0
 cde:	b0 e0       	ldi	r27, 0x00	; 0
 ce0:	e4 e7       	ldi	r30, 0x74	; 116
 ce2:	f6 e0       	ldi	r31, 0x06	; 6
 ce4:	0c 94 e7 06 	jmp	0xdce	; 0xdce <__prologue_saves__+0x10>
 ce8:	8f b7       	in	r24, 0x3f	; 63
 cea:	80 78       	andi	r24, 0x80	; 128
 cec:	80 93 68 01 	sts	0x0168, r24
 cf0:	d0 91 7b 00 	lds	r29, 0x007B
 cf4:	10 b7       	in	r17, 0x30	; 48
 cf6:	00 91 80 00 	lds	r16, 0x0080
 cfa:	f0 90 81 00 	lds	r15, 0x0081
 cfe:	e6 b2       	in	r14, 0x16	; 22
 d00:	a0 90 84 00 	lds	r10, 0x0084
 d04:	b0 90 85 00 	lds	r11, 0x0085
 d08:	d0 90 64 00 	lds	r13, 0x0064
 d0c:	c0 90 7c 00 	lds	r12, 0x007C
 d10:	80 e4       	ldi	r24, 0x40	; 64
 d12:	80 93 7b 00 	sts	0x007B, r24
 d16:	84 e0       	ldi	r24, 0x04	; 4
 d18:	80 bf       	out	0x30, r24	; 48
 d1a:	10 92 80 00 	sts	0x0080, r1
 d1e:	81 e8       	ldi	r24, 0x81	; 129
 d20:	80 93 81 00 	sts	0x0081, r24
 d24:	f8 94       	cli
 d26:	c0 e0       	ldi	r28, 0x00	; 0
 d28:	23 c0       	rjmp	.+70     	; 0xd70 <burst+0x94>
 d2a:	8c 2f       	mov	r24, r28
 d2c:	90 e0       	ldi	r25, 0x00	; 0
 d2e:	fc 01       	movw	r30, r24
 d30:	ee 0f       	add	r30, r30
 d32:	ff 1f       	adc	r31, r31
 d34:	e8 0f       	add	r30, r24
 d36:	f9 1f       	adc	r31, r25
 d38:	ee 0f       	add	r30, r30
 d3a:	ff 1f       	adc	r31, r31
 d3c:	e1 5b       	subi	r30, 0xB1	; 177
 d3e:	fe 4f       	sbci	r31, 0xFE	; 254
 d40:	85 81       	ldd	r24, Z+5	; 0x05
 d42:	a8 2f       	mov	r26, r24
 d44:	a3 70       	andi	r26, 0x03	; 3
 d46:	b0 e0       	ldi	r27, 0x00	; 0
 d48:	aa 0f       	add	r26, r26
 d4a:	bb 1f       	adc	r27, r27
 d4c:	aa 0f       	add	r26, r26
 d4e:	bb 1f       	adc	r27, r27
 d50:	aa 5f       	subi	r26, 0xFA	; 250
 d52:	be 4f       	sbci	r27, 0xFE	; 254
 d54:	ed 91       	ld	r30, X+
 d56:	fc 91       	ld	r31, X
 d58:	11 97       	sbiw	r26, 0x01	; 1
 d5a:	30 97       	sbiw	r30, 0x00	; 0
 d5c:	19 f0       	breq	.+6      	; 0xd64 <burst+0x88>
 d5e:	12 96       	adiw	r26, 0x02	; 2
 d60:	6c 91       	ld	r22, X
 d62:	09 95       	icall
 d64:	8f b7       	in	r24, 0x3f	; 63
 d66:	90 91 68 01 	lds	r25, 0x0168
 d6a:	89 2b       	or	r24, r25
 d6c:	8f bf       	out	0x3f, r24	; 63
 d6e:	cf 5f       	subi	r28, 0xFF	; 255
 d70:	80 91 4e 01 	lds	r24, 0x014E
 d74:	c8 17       	cp	r28, r24
 d76:	c8 f2       	brcs	.-78     	; 0xd2a <burst+0x4e>
 d78:	d0 93 7b 00 	sts	0x007B, r29
 d7c:	10 bf       	out	0x30, r17	; 48
 d7e:	00 93 80 00 	sts	0x0080, r16
 d82:	f0 92 81 00 	sts	0x0081, r15
 d86:	e6 ba       	out	0x16, r14	; 22
 d88:	b0 92 85 00 	sts	0x0085, r11
 d8c:	a0 92 84 00 	sts	0x0084, r10
 d90:	d0 92 64 00 	sts	0x0064, r13
 d94:	c0 92 7c 00 	sts	0x007C, r12
 d98:	8f b7       	in	r24, 0x3f	; 63
 d9a:	90 91 68 01 	lds	r25, 0x0168
 d9e:	89 2b       	or	r24, r25
 da0:	8f bf       	out	0x3f, r24	; 63
 da2:	cd b7       	in	r28, 0x3d	; 61
 da4:	de b7       	in	r29, 0x3e	; 62
 da6:	ea e0       	ldi	r30, 0x0A	; 10
 da8:	0c 94 03 07 	jmp	0xe06	; 0xe06 <__epilogue_restores__+0x10>

00000dac <main>:

int main( void )
{

   /* initialise host app, pins, watchdog, etc */
    init_system();
 dac:	0e 94 a0 00 	call	0x140	; 0x140 <init_system>

    /* configure timer ISR to fire regularly */
    init_timer_isr();
 db0:	0e 94 5d 00 	call	0xba	; 0xba <init_timer_isr>

	/* Initialize Touch sensors */
	touch_init();
 db4:	0e 94 03 01 	call	0x206	; 0x206 <touch_init>


    /* loop forever */
    for( ; ; )
    {
        touch_measure();
 db8:	0e 94 35 01 	call	0x26a	; 0x26a <touch_measure>
 dbc:	fd cf       	rjmp	.-6      	; 0xdb8 <main+0xc>

00000dbe <__prologue_saves__>:
 dbe:	2f 92       	push	r2
 dc0:	3f 92       	push	r3
 dc2:	4f 92       	push	r4
 dc4:	5f 92       	push	r5
 dc6:	6f 92       	push	r6
 dc8:	7f 92       	push	r7
 dca:	8f 92       	push	r8
 dcc:	9f 92       	push	r9
 dce:	af 92       	push	r10
 dd0:	bf 92       	push	r11
 dd2:	cf 92       	push	r12
 dd4:	df 92       	push	r13
 dd6:	ef 92       	push	r14
 dd8:	ff 92       	push	r15
 dda:	0f 93       	push	r16
 ddc:	1f 93       	push	r17
 dde:	cf 93       	push	r28
 de0:	df 93       	push	r29
 de2:	cd b7       	in	r28, 0x3d	; 61
 de4:	de b7       	in	r29, 0x3e	; 62
 de6:	ca 1b       	sub	r28, r26
 de8:	db 0b       	sbc	r29, r27
 dea:	0f b6       	in	r0, 0x3f	; 63
 dec:	f8 94       	cli
 dee:	de bf       	out	0x3e, r29	; 62
 df0:	0f be       	out	0x3f, r0	; 63
 df2:	cd bf       	out	0x3d, r28	; 61
 df4:	09 94       	ijmp

00000df6 <__epilogue_restores__>:
 df6:	2a 88       	ldd	r2, Y+18	; 0x12
 df8:	39 88       	ldd	r3, Y+17	; 0x11
 dfa:	48 88       	ldd	r4, Y+16	; 0x10
 dfc:	5f 84       	ldd	r5, Y+15	; 0x0f
 dfe:	6e 84       	ldd	r6, Y+14	; 0x0e
 e00:	7d 84       	ldd	r7, Y+13	; 0x0d
 e02:	8c 84       	ldd	r8, Y+12	; 0x0c
 e04:	9b 84       	ldd	r9, Y+11	; 0x0b
 e06:	aa 84       	ldd	r10, Y+10	; 0x0a
 e08:	b9 84       	ldd	r11, Y+9	; 0x09
 e0a:	c8 84       	ldd	r12, Y+8	; 0x08
 e0c:	df 80       	ldd	r13, Y+7	; 0x07
 e0e:	ee 80       	ldd	r14, Y+6	; 0x06
 e10:	fd 80       	ldd	r15, Y+5	; 0x05
 e12:	0c 81       	ldd	r16, Y+4	; 0x04
 e14:	1b 81       	ldd	r17, Y+3	; 0x03
 e16:	aa 81       	ldd	r26, Y+2	; 0x02
 e18:	b9 81       	ldd	r27, Y+1	; 0x01
 e1a:	ce 0f       	add	r28, r30
 e1c:	d1 1d       	adc	r29, r1
 e1e:	0f b6       	in	r0, 0x3f	; 63
 e20:	f8 94       	cli
 e22:	de bf       	out	0x3e, r29	; 62
 e24:	0f be       	out	0x3f, r0	; 63
 e26:	cd bf       	out	0x3d, r28	; 61
 e28:	ed 01       	movw	r28, r26
 e2a:	08 95       	ret

00000e2c <_exit>:
 e2c:	f8 94       	cli

00000e2e <__stop_program>:
 e2e:	ff cf       	rjmp	.-2      	; 0xe2e <__stop_program>
